[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends CanvasLayer

signal screen_dragged (translate)
signal screen_tapped ()
var pressed : bool = false
var drag_start_position : = Vector2(0,0)

var dragging : bool = false

var handle_input : bool = false
func _on_CanvasLayer_gui_input(event):
	if event is InputEventMouseButton:
		if event.button_index == BUTTON_LEFT:
			if event.pressed:
				pressed = true
				drag_start_position = event.position
			else:
				if !dragging:
					emit_signal(\"screen_tapped\")
				pressed = false
				dragging = false
	
	if event is InputEventMouseMotion:
		if pressed:
			# Enable Dragging
			if drag_start_position.distance_to(event.position) > 40 and dragging == false:
				dragging = true
			
			# Dragging
			if dragging:
				emit_signal(\"screen_dragged\", -event.relative)
"

[node name="Inputs" type="CanvasLayer"]
layer = 100
script = SubResource( 1 )

[node name="CanvasLayer" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="gui_input" from="CanvasLayer" to="." method="_on_CanvasLayer_gui_input"]
